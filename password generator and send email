import random
import ssl
import smtplib
from email.message import EmailMessage
import pandas as pd

global indexes,cycle, data_find ,existing_acct ,existing_index
indexes, cycle, data_find ,existing_acct , existing_index = 0,0,[],None,None


acctno1 = ''
password1 = ''
alternatepw1 = ''
response = ''
passgen2 = ''
passgenentry = 0

data = {
        'acctno': ['123','124','125'],
        'password': ['cute','beauty','pretty'],
        'acctname': ['Analyst', 'Encoder','Programmer'],
        'alternatepw': [['asdfg', '12345'],['qwerty','12346'],['hjkl','1234'] ],
        'security_question': ['nice','great','good']
}
def send_email(response):
    #print('verified answer define', response)
    if response == 'n':
        message = """
        someone use your alternate password
        account will close temporarily
        change your password as soon as possible
        thank you !!!
        """
    elif response == 'y':
        message = """
        dont worry your account is safe
        thank you !!!
        """

    email_sender = '___________'
    email_password = '___________'
    email_receiver = '___________'

    # Plain Text string as the email message
    subject = 'This is a simple password generator program .'

    body = message

    em = EmailMessage()
    em['From'] = email_sender
    em['To'] = email_receiver
    em['Subject'] = subject
    em.set_content(body)

    context = ssl.create_default_context()

    try:
        with smtplib.SMTP_SSL('smtp.gmail.com',465, context=context) as smtp:
            smtp.login(email_sender, email_password)
            smtp.sendmail(email_sender, email_receiver, em.as_string())
        print('message successfully sent')
    except:
        print('error sending message')

def data_search(account_no, count):
    global indexes, cycle, data_find,existing_acct , existing_index
    index = 0
    index1 = 0
    #print('account number ',type(account_no) ,account_no)
    if cycle == 0:
        for keys, values in data.items():
            if keys == 'acctno':
                for x in values:
                    index += 1
                    if x == str(account_no):
                        #print('values ', index)
                        index1 = index
                        existing_acct = x
                        existing_index = index1

            #print('values ', index1 - 1)
            data_find.append(values[index1-1])
            indexes = index1-1
        cycle = 1

    print('data information ',data_find)
    return data_find[count]

def data_search1(alternate_password):
    global existing_acct, existing_index
    alterpw = ''
    data_find = []
    loops = 0
    temp = ''
    temp1 = ''
    for keys, values in data.items():
        data_find.append(values[existing_index - 1])

    for keys, values in data.items():
        if keys == 'password':
            for x in data_find[3]:
                if x == alternate_password:
                    loops = 1
                    alterpw = x
                    temp, temp1 = data_find[4], data_find[1]
            if loops == 0:
                pass
    print('data information ', data_find)
    return alterpw, temp, temp1

def alternate_pw(alternate_password):
    index = 0
    index1 = 0
    data_find1 = []
    alternate_pw_get = ''
    loop = 0

    for keys, values in data.items():
        if keys == 'alternatepw':
            for value in values:
                index += 1
                # print(value)
                for x in value:
                    if x == str(alternate_password):
                        index1 = index
                        alternate_pw_get = x

    for keys, values in data.items():
        data_find1.append(values[index1 - 1])

    #print('data find and account name ',data_find1[4] ,data_find1[0])
    return alternate_pw_get, data_find1[4], data_find1[0]

while True:
    tries = 0
    tries1 = 0
    tries2 = 0
    attempt = True
    passgen = []
    transaction = input('Enter Transaction y/n ',)
    if transaction == 'y':
        while attempt == True:
            passgenentry = 0
            tries += 1
            acctno1 = str(input('enter your account number ',))
            acctno = data_search(acctno1,0)
            #print(acctno)
            if acctno1 == acctno:
                while attempt == True:
                    tries1 += 1
                    password1 = input('enter your password ',)
                    password = data_search(password1,1)
                    if password1 == password:
                        for x in range(0,6):
                            random_number = str(random.randint(1,9))
                            passgen.append(random_number)
                        passgen1 = ''.join(passgen)
                        print('password generator ',passgen1)
                        while attempt == True:
                            tries2 += 1
                            passgen2 = input('enter your password generator ', )
                            if passgen2 == passgen1:
                                accountname = data_search(password1, 2)
                                print(f'Welcome {accountname}')
                                indexes, cycle, data_find = 0, 0, []
                                attempt = False
                            else:
                                if tries2 == 3:
                                    print(f'invalid password generator {tries2} try already')
                                    indexes, cycle, data_find = 0, 0, []
                                    attempt = False

                                else:
                                    print(f'invalid password generator {tries2} try')

                    else:
                        if tries1 == 3:
                            print(f'invalid password sorry {tries1} try already')
                            response = input('forget password y/n ', )
                            if response == 'y':
                                temp = 0
                                verified = ''
                                verified_answer = ''
                                alternatepw1 = str(input('Enter your alternate password name ', ))

                                '''if existing_index == None:
                                    alternatepw = alternate_pw(alternatepw1)
                                else:'''
                                alternatepw  = data_search1(alternatepw1)
                                if alternatepw[0] == alternatepw1:
                                    print('your password name :', alternatepw[2])
                                    verified = input('Enter your security question ', )
                                    if verified == alternatepw[1]:
                                        verified_answer = 'y'
                                    else:
                                        verified_answer = 'n'
                                    send_email(verified_answer)
                                    indexes, cycle, data_find = 0, 0, []
                                    existing_acct, existing_index = '',''
                                    attempt = False
                                    temp = 1

                                if temp == 0:
                                    print('Invalid alternate password name ')
                                    indexes, cycle, data_find = 0, 0, []
                                    existing_acct, existing_index = '', ''
                                    attempt = False
                            else:
                                attempt = False
                        else:
                            #indexes, cycle, data_find = 0, 0, []
                            print(f'invalid password {tries1} try')

            else:
                if tries == 3:
                    print(f'invalid account sorry {tries} try already')
                    response = input('forget account y/n ',)
                    if response == 'y':
                        temp = 0
                        verified = ''
                        verified_answer = ''
                        alternatepw1 = input('Enter your alternate account name ',)
                        alternatepw = alternate_pw(alternatepw1)
                        if alternatepw[0] == alternatepw1:
                            print('your account name :',alternatepw[2])
                            verified = input('Enter your security question ', )
                            if verified == alternatepw[1]:
                                verified_answer = 'y'
                            else:
                                verified_answer = 'n'
                            send_email(verified_answer)
                            indexes, cycle, data_find = 0, 0, []
                            attempt = False
                            temp = 1
                        if temp == 0:
                            indexes, cycle, data_find = 0, 0, []
                            attempt = False
                            print('Invalid alternate account name ', )

                    else:
                        indexes, cycle, data_find = 0, 0, []
                        attempt = False
                else:
                    indexes, cycle, data_find = 0, 0, []
                    print(f'invalid account {tries} try')
    else:
        print('thank you, goodbye')
        break
